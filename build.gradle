// 定义插件版本,不立即应用
plugins {
    id "org.springframework.boot" version "${springBootPlugin}" apply(false)
    id "com.bmuschko.docker-remote-api" version "${dockerPlugin}" apply(false)
    id "com.bmuschko.docker-spring-boot-application" version "${dockerPlugin}" apply(false)
}

allprojects {
    group = 'com.glacier'
    description = 'spring-boot-learning'
}

def springBootProjects() {
    return subprojects.findAll { it.name != 'platform' }
}

configure(springBootProjects()) {
    apply plugin: 'com.glacier.java-conventions'
    // 方式一
    apply plugin: 'com.glacier.library-conventions'
    apply plugin: 'org.springframework.boot'
    apply plugin: 'io.spring.dependency-management'

//    configurations {
//        // 全局排除依赖
//        // 解决activiti 7 依赖问题
//        all*.exclude group: "org.activiti.core.common", module: "activiti-core-common-dependencies"
//        all*.exclude group: "org.activiti.api", module: "activiti-api-dependencies"
//        // 排除junit
//        all*.exclude group: "junit", module: "junit"
//    }

    dependencies {
        // 方式二
//        implementation platform(project(':platform'))

        implementation('org.springframework.boot:spring-boot-starter-web')
        implementation('org.springframework.boot:spring-boot-starter-actuator')

        testImplementation('org.springframework.boot:spring-boot-starter-test') {
            exclude(group: 'org.junit.vintage', module: 'junit-vintage-engine')
        }
    }

    // 生成jar文件时，MANIFEST.MF的内容如下
    bootJar {
        manifest {
            attributes(manifestMap)
        }
    }
}

wrapper {
    gradleVersion = '7.5.1'
}
