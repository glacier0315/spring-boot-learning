// 定义插件版本,不立即应用
plugins {
    id "org.springframework.boot" version "${springBootPlugin}" apply(false)
    id "com.bmuschko.docker-remote-api" version "${dockerPlugin}" apply(false)
    id "com.bmuschko.docker-spring-boot-application" version "${dockerPlugin}" apply(false)
}

allprojects {
    group = 'com.glacier'
    description = 'spring-boot-learning'
}
/**
 * 排除平台 配置
 * @return
 */
def springBootProjects() {
    return subprojects.findAll { it.name.indexOf('platform') < 0 }
}

configure(springBootProjects()) {
    apply plugin: 'com.glacier.java-conventions'
    apply plugin: 'org.springframework.boot'

    configurations {
        // 全局排除依赖
        configureEach {
            // 解决activiti 7 依赖问题
            exclude group: "org.activiti.core.common", module: "activiti-core-common-dependencies"
            exclude group: "org.activiti.api", module: "activiti-api-dependencies"
            // 解决easyExcel 升级poi 5 依赖问题
            exclude group: "org.apache.poi", module: "poi-ooxml-schemas"
            // 排除junit
            exclude group: "junit", module: "junit"
            exclude group: "org.junit.vintage", module: "junit-vintage-engine"
        }
    }

    dependencies {
        implementation(platform("com.glacier.platforms:spring-boot-bom:1.0.0-SNAPSHOT"))

        // 引入 lombok
        compileOnly("org.projectlombok:lombok:${lombokVersion}")
        annotationProcessor("org.projectlombok:lombok:${lombokVersion}")

        testCompileOnly("org.projectlombok:lombok:${lombokVersion}")
        testAnnotationProcessor("org.projectlombok:lombok:${lombokVersion}")

        testImplementation('org.springframework.boot:spring-boot-starter-test')
    }
}

wrapper {
    gradleVersion = '8.4'
}
